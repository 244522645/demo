<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="http://www.springframework.org/schema/beans   
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
	http://www.springframework.org/schema/tx   
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
	http://www.springframework.org/schema/aop    
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/mvc    
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context    
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://mybatis.org/schema/mybatis-spring 
	http://mybatis.org/schema/mybatis-spring.xsd  
	">


	<!-- 读取配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 注入数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>
	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>


	<!-- MyBatis Sql -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:com/config/mybatis/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/mapper/*-Mapper.xml</value>
			</list>
		</property>
	</bean>


	<!-- 扫描Mapper路径及父接口 -->
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mapper" />
	</bean>
	 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login/POPMessage.do" />
			<mvc:mapping path="/login/chengePassword.do" />
			<mvc:mapping path="/index/index.do" />
			<mvc:mapping path="/notice/*.do" />
			<mvc:mapping path="/PosOrders/*.do" />
			<mvc:mapping path="/ScanQRCode/*.do" />
			<mvc:mapping path="/return.do" />
			<bean class="com.controller.CommonInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->

	<!-- ***************事务配置************** -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<aop:config>
		<aop:advisor pointcut="execution(* com.service.impl.*.*(..))"
			advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" rollback-for="Exception" />
			<tx:method name="query*" read-only="true" rollback-for="Exception" />
			<tx:method name="find*" read-only="true" rollback-for="Exception" />
			<tx:method name="load*" read-only="true" rollback-for="Exception" />
			<tx:method name="select*" read-only="true" rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
</beans>  